{
	"AllowedHosts": "certificate-id.example.local;siths-hsa-id.example.local;siths-person-id.example.local;test-siths-hsa-id.example.local;test-siths-person-id.example.local",
	"Authentication": {
		"Certificate": {
			// "EventsType": "RegionOrebroLan.CertificateIdentity.Web.Authentication.Certificate.CertificateAuthenticationEvents, RegionOrebroLan.CertificateIdentity",
			// Remove this when using real certificates.
			"RevocationMode": "NoCheck"
		},
		"CertificateEvents": {
			"DistinguishedNameClaims": {
				"CN=Certificate-Identity Siths HSA Intermediate CA": {
					"Map": {
						"SERIALNUMBER": [
							"hsa_identity",
							"sub"
						]
					}
				},
				"CN=Certificate-Identity Siths Person Intermediate CA": {
					"Map": {
						"SERIALNUMBER": [
							"personal_identity_number",
							"sub"
						]
					}
				},
				"CN=Certificate-Identity Test Siths HSA Intermediate CA": {
					"Map": {
						"SERIALNUMBER": [
							"hsa_identity",
							"sub"
						]
					}
				},
				"CN=Certificate-Identity Test Siths Person Intermediate CA": {
					"Map": {
						"SERIALNUMBER": [
							"personal_identity_number",
							"sub"
						]
					}
				}
			}
		}
	},
	"ConnectionStrings": {
		"IdentityServer": "Data Source=Data/Identity-Server.db"
		// If we want to use Sql Server Local DB when we develop.
		// "IdentityServer": "Server=(LocalDB)\\MSSQLLocalDB;AttachDbFileName=Data/IdentityServer.mdf;Integrated Security=True"
	},
	"Data": {
		"ProviderType": "RegionOrebroLan.CertificateIdentity.Data.SqliteProvider, RegionOrebroLan.CertificateIdentity"
		// If we want to use Sql Server.
		// "ProviderType": "RegionOrebroLan.CertificateIdentity.Data.SqlServerProvider, RegionOrebroLan.CertificateIdentity"
	},
	"DataProtection": {
		"ProviderType": "RegionOrebroLan.CertificateIdentity.DataProtection.Data.SqliteDataProtectionProvider, RegionOrebroLan.CertificateIdentity"
		// If we want to use Sql Server.
		// "ProviderType": "RegionOrebroLan.CertificateIdentity.DataProtection.Data.SqlServerDataProtectionProvider, RegionOrebroLan.CertificateIdentity"
	},
	"ExceptionHandling": {
		"Detailed": true,
		"DeveloperExceptionPage": false
	},
	"FeatureManagement": {
		"CertificateForwarding": false,
		"CookiePolicy": true,
		"ForwardedHeaders": false,
		"Hsts": true,
		"HttpsRedirection": false,
		"ServerSideSessions": true
	},
	"IdentityResources": [
		{
			"DisplayName": "Email-address",
			"Emphasize": true,
			"Name": "email",
			"UserClaims": [
				"email",
				"email_verified"
			]
		},
		{
			"DisplayName": "User-identifier",
			"Name": "openid",
			"Required": true,
			"UserClaims": [ "sub" ]
		},
		{
			"DisplayName": "User-profile",
			"Description": "User-profile information (first name, last name, etc.)",
			"Emphasize": true,
			"Name": "profile",
			"UserClaims": [
				"hsa_identity",
				"name",
				"personal_identity_number",
				"upn"
			]
		}
	],
	"IdentityServer": {
		"Events": {
			"_RaiseInformationEvents": true,
			"_RaiseSuccessEvents": true
		}
	},
	"Serilog": {
		"MinimumLevel": {
			"Default": "Error",
			"Override": {
				"Application": "Verbose",
				"RegionOrebroLan.CertificateIdentity": "Verbose"
			}
		},
		"Properties": {
			"Application": "Application"
		},
		"WriteTo": {
			"Console": {
				"Name": "Console",
				"Args": {
					"outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} - [{Level}] - {SourceContext}: {Message}{NewLine}{Exception}"
				}
			},
			"Debug": {
				"Name": "Debug",
				"Args": {
					"outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} - [{Level}] - {SourceContext}: {Message}{NewLine}{Exception}"
				}
			},
			"Fluentd": {
				"Name": "Http",
				"Args": {
					"queueLimitBytes": null,
					"requestUri": "http://fluentd.example.org:8888",
					"textFormatter": "Serilog.Formatting.Elasticsearch.ElasticsearchJsonFormatter, Serilog.Formatting.Elasticsearch"
				}
			},
			"Seq": {
				"Name": "Seq",
				"Args": {
					"apiKey": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
					"serverUrl": "http://seq.example.org:5555"
				}
			}
		}
	}
}